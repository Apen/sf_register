{"version":3,"sources":["node_modules/browser-pack/_prelude.js","Sources/TypeScript/PasswordStrengthCalculator.ts","Sources/TypeScript/SfRegister.ts","Sources/TypeScript/sf_register.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","PasswordStrengthCalculator","prototype","verdictLength","password","score","log","verdictLetter","matchLower","match","matchUpper","verdictNumbers","numbers","replace","verdictSpecialChars","specialCharacters","verdictCombos","letter","number","special","finalVerdict","finalScore","calculate","lengthVerdict","this","letterVerdict","numberVerdict","specialVerdict","combosVerdict","join","verdict","PasswordStrengthCalculator_1","document","window","SfRegister","contentLoaded","zone","getElementById","zoneEmpty","zoneLoading","barGraph","classList","add","passwordStrengthCalculator","default","isInternetExplorer","loadInternetExplorerPolyfill","attachToElementById","callTestPassword","bind","countryChanged","uploadFile","removeFile","showElement","element","remove","hideElement","id","eventName","callback","attachToElement","addEventListener","event","target","meterResult","value","tagName","toLowerCase","percentScore","Math","min","floor","blinds","contentDocument","contentWindow","getElementsByClassName","index","blind","userAgent","navigator","indexOf","_this","body","getElementsByTagName","item","js","createElement","setAttribute","onload","meterPolyfill","appendChild","type","keyCode","loading","srcElement","countrySelectedValue","options","selectedIndex","disabled","ajaxRequest","XMLHttpRequest","xhrReadyOnLoad","open","setRequestHeader","send","stateChanged","xhrResponse","readyState","status","xhrResponseData","JSON","parse","responseText","data","addZoneOptions","removeChild","forEach","option","Option","label","information","submitForm","form","reset","sfRegister","sfRegister_submitForm"],"mappings":"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","file":"sf_register.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","interface Verdict {\n  score: number,\n  log: string,\n  verdict?: string\n}\n\nexport default class PasswordStrengthCalculator {\n  /**\n   * password length:\n   * level 0 (0 point): less than 4 characters\n   * level 1 (6 points): between 5 and 7 characters\n   * level 2 (12 points): between 8 and 15 characters\n   * level 3 (18 points): 16 or more characters\n   */\n  verdictLength(password: String): Verdict {\n    let score = 0,\n      log = '',\n      length = password.length;\n    switch (true) {\n      case length > 0 && length < 5:\n        log = '3 points for length (' + length + ')';\n        score = 3;\n        break;\n\n      case length > 4 && length < 8:\n        log = '6 points for length (' + length + ')';\n        score = 6;\n        break;\n\n      case length > 7 && length < 16:\n        log = '12 points for length (' + length + ')';\n        score = 12;\n        break;\n\n      case length > 15:\n        log = '18 points for length (' + length + ')';\n        score = 18;\n        break;\n    }\n    return {score: score, log: log};\n  };\n\n  /**\n   * letters:\n   * level 0 (0 points): no letters\n   * level 1 (5 points): all letters are lower case\n   * level 1 (5 points): all letters are upper case\n   * level 2 (7 points): letters are mixed case\n   */\n  verdictLetter(password: String): Verdict {\n    let score = 0,\n      log = '',\n      matchLower = password.match(/[a-z]/),\n      matchUpper = password.match(/[A-Z]/);\n    if (matchLower) {\n      if (matchUpper) {\n        score = 7;\n        log = '7 points for letters are mixed';\n      } else {\n        score = 5;\n        log = '5 point for at least one lower case char';\n      }\n    } else if (matchUpper) {\n      score = 5;\n      log = '5 points for at least one upper case char';\n    }\n    return {score: score, log: log};\n  };\n\n  /**\n   * numbers:\n   * level 0 (0 points): no numbers exist\n   * level 1 (5 points): one number exists\n   * level 1 (7 points): 3 or more numbers exists\n   */\n  verdictNumbers(password: String): Verdict {\n    let score = 0,\n      log = '',\n      numbers = password.replace(/\\D/gi, '');\n    if (numbers.length > 1) {\n      score = 7;\n      log = '7 points for at least three numbers';\n    } else if (numbers.length > 0) {\n      score = 5;\n      log = '5 points for at least one number';\n    }\n    return {score: score, log: log};\n  };\n\n  /**\n   * special characters:\n   * level 0 (0 points): no special characters\n   * level 1 (5 points): one special character exists\n   * level 2 (10 points): more than one special character exists\n   */\n  verdictSpecialChars(password: String): Verdict {\n    let score = 0,\n      log = '',\n      specialCharacters = password.replace(/[\\w\\s]/gi, '');\n    if (specialCharacters.length > 1) {\n      score = 10;\n      log = '10 points for at least two special chars';\n    } else if (specialCharacters.length > 0) {\n      score = 5;\n      log = '5 points for at least one special char';\n    }\n    return {score: score, log: log};\n  };\n\n  /**\n   * combinations:\n   * level 0 (1 points): mixed case letters\n   * level 0 (1 points): letters and numbers\n   * level 1 (2 points): mixed case letters and numbers\n   * level 3 (4 points): letters, numbers and special characters\n   * level 4 (6 points): mixed case letters, numbers and special characters\n   */\n  verdictCombos(letter: number, number: number, special: number): Verdict {\n    let score = 0,\n      log = '';\n    if (letter === 7 && number > 0 && special > 0) {\n      score = 6;\n      log = '6 combo points for letters, numbers and special characters';\n    } else if (letter > 0 && number > 0 && special > 0) {\n      score = 4;\n      log = '4 combo points for letters, numbers and special characters';\n    } else if (letter === 7 && number > 0) {\n      score = 2;\n      log = '2 combo points for mixed case letters and numbers';\n    } else if (letter > 0 && number > 0) {\n      score = 1;\n      log = '1 combo points for letters and numbers';\n    } else if (letter === 7) {\n      score = 1;\n      log = '1 combo points for mixed case letters';\n    }\n    return {score: score, log: log};\n  };\n\n  /**\n   * final verdict base on final score\n   */\n  finalVerdict(finalScore: number): string {\n    let strVerdict = '';\n    if (finalScore < 16) {\n      strVerdict = 'very weak';\n    } else if (finalScore > 15 && finalScore < 25) {\n      strVerdict = 'weak';\n    } else if (finalScore > 24 && finalScore < 35) {\n      strVerdict = 'mediocre';\n    } else if (finalScore > 34 && finalScore < 45) {\n      strVerdict = 'strong';\n    } else {\n      strVerdict = 'stronger';\n    }\n    return strVerdict;\n  };\n\n  calculate(password: string): Verdict {\n    let lengthVerdict = this.verdictLength(password);\n    let letterVerdict = this.verdictLetter(password);\n    let numberVerdict = this.verdictNumbers(password);\n    let specialVerdict = this.verdictSpecialChars(password);\n    let combosVerdict = this.verdictCombos(letterVerdict.score, numberVerdict.score, specialVerdict.score);\n\n    let score =\n      lengthVerdict.score\n      + letterVerdict.score\n      + numberVerdict.score\n      + specialVerdict.score\n      + combosVerdict.score;\n\n    let log = [\n      lengthVerdict.log,\n      letterVerdict.log,\n      numberVerdict.log,\n      specialVerdict.log,\n      combosVerdict.log,\n      score + ' points final score'\n    ].join(\"\\n\");\n\n    return {score: score, verdict: this.finalVerdict(score), log: log};\n  }\n}\n","import PasswordStrengthCalculator from './PasswordStrengthCalculator';\n\ninterface SelectOption {\n  label: string,\n  value: string,\n}\n\nlet document = window.document;\n\nexport default class SfRegister {\n  public loading: boolean = false;\n  public ajaxRequest: XMLHttpRequest = null;\n  public barGraph:HTMLMeterElement = null;\n  public passwordStrengthCalculator:PasswordStrengthCalculator = null;\n  public zone:HTMLSelectElement = null;\n  public zoneEmpty:HTMLElement = null;\n  public zoneLoading:HTMLElement = null;\n\n  constructor() {\n    // Attach content loaded element with callback to document\n    document.addEventListener('DOMContentLoaded', this.contentLoaded.bind(this));\n  }\n\n  /**\n   * Callback after content was loaded\n   */\n  contentLoaded(this: SfRegister) {\n    this.zone = (document.getElementById('sfrZone') as HTMLSelectElement);\n    this.zoneEmpty = document.getElementById('sfrZone_empty');\n    this.zoneLoading = document.getElementById('sfrZone_loading');\n\n    this.barGraph = (document.getElementById('bargraph') as HTMLMeterElement);\n    if (this.barGraph) {\n      this.barGraph.classList.add('show');\n      this.passwordStrengthCalculator = new PasswordStrengthCalculator();\n      if (this.isInternetExplorer()) {\n        this.loadInternetExplorerPolyfill();\n      } else {\n        this.attachToElementById('sfrpassword', 'keyup', this.callTestPassword.bind(this));\n      }\n    }\n\n    this.attachToElementById('sfrCountry', 'change', this.countryChanged.bind(this));\n    this.attachToElementById('sfrCountry', 'keyup', this.countryChanged.bind(this));\n    this.attachToElementById('uploadButton', 'change', this.uploadFile.bind(this));\n    this.attachToElementById('removeImageButton', 'click', this.removeFile.bind(this));\n  };\n\n  /**\n   * Add class d-block remove class d-none\n   */\n  showElement(element: HTMLElement) {\n    element.classList.remove('d-none');\n    element.classList.add('d-block');\n  };\n\n  /**\n   * Add class d-none remove class d-block\n   */\n  hideElement(element: HTMLElement) {\n    element.classList.remove('d-block');\n    element.classList.add('d-none');\n  };\n\n  attachToElementById(id: string, eventName: string, callback: EventListenerOrEventListenerObject) {\n    let element = document.getElementById(id);\n    this.attachToElement(element, eventName, callback);\n  }\n\n  attachToElement(element: HTMLElement, eventName: string, callback: EventListenerOrEventListenerObject) {\n    if (element) {\n      element.addEventListener(eventName, callback);\n    }\n  };\n\n  /**\n   * Gets password meter element and sets the value with\n   * the result of the calculate password strength function\n   */\n  callTestPassword(this: SfRegister, event: Event) {\n    let element = (event.target as HTMLInputElement),\n      meterResult = this.passwordStrengthCalculator.calculate(element.value);\n\n    if (this.barGraph.tagName.toLowerCase() === 'meter') {\n      this.barGraph.value = meterResult.score;\n    } else {\n      let barGraph = (this.barGraph as unknown as HTMLIFrameElement),\n        percentScore = Math.min((Math.floor(meterResult.score / 3.4)), 10),\n        blinds = (\n          barGraph.contentDocument || barGraph.contentWindow.document\n        ).getElementsByClassName('blind');\n\n      for (let index = 0; index < blinds.length; index++) {\n        let blind = (blinds[index] as HTMLElement);\n        if (index < percentScore) {\n          this.hideElement(blind);\n        } else {\n          this.showElement(blind);\n        }\n      }\n    }\n  };\n\n  isInternetExplorer(): boolean {\n    let userAgent = navigator.userAgent;\n    /* MSIE used to detect old browsers and Trident used to newer ones*/\n    return userAgent.indexOf('MSIE ') > -1 || userAgent.indexOf('Trident/') > -1;\n  };\n\n  loadInternetExplorerPolyfill(this: SfRegister) {\n    let body = document.getElementsByTagName('body').item(0),\n      js = document.createElement('script');\n    js.setAttribute('type', 'text/javascript');\n    js.setAttribute('src', 'https://unpkg.com/meter-polyfill/dist/meter-polyfill.min.js');\n    js.onload = () => {\n      // @ts-ignore\n      meterPolyfill(this.barGraph);\n      this.attachToElementById('sfrpassword', 'keyup', this.callTestPassword);\n    };\n    body.appendChild(js);\n  };\n\n\n  /**\n   * Change value of zone selectbox\n   */\n  countryChanged(this: SfRegister, event: KeyboardEvent) {\n    if (\n      (\n        event.type === 'change'\n        || (event.type === 'keyup' && (event.keyCode === 40 || event.keyCode === 38))\n      )\n      && this.loading !== true\n    ) {\n      if (this.zone) {\n        let target = ((event.target || event.srcElement) as HTMLSelectElement),\n          countrySelectedValue = target.options[target.selectedIndex].value;\n\n        this.loading = true;\n\n        this.zone.disabled = true;\n        this.hideElement(this.zoneEmpty);\n        this.showElement(this.zoneLoading);\n\n        this.ajaxRequest = new XMLHttpRequest();\n        this.ajaxRequest.onload = this.xhrReadyOnLoad.bind(this);\n        this.ajaxRequest.open('POST', 'index.php?ajax=sf_register');\n        this.ajaxRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        this.ajaxRequest.send('tx_sfregister[action]=zones&tx_sfregister[parent]=' + countrySelectedValue);\n      }\n    }\n  };\n\n  /**\n   * Process ajax response and display error message or\n   * hand data received to add zone option function\n   */\n  xhrReadyOnLoad(this: SfRegister, stateChanged: ProgressEvent): any {\n    let xhrResponse = (stateChanged.target as XMLHttpRequest);\n\n    if (xhrResponse.readyState === 4 && xhrResponse.status === 200) {\n      let xhrResponseData = JSON.parse(xhrResponse.responseText);\n      this.hideElement(this.zoneLoading);\n\n      if (xhrResponseData.status === 'error' || xhrResponseData.data.length === 0) {\n        this.showElement(this.zoneEmpty);\n      } else {\n        this.addZoneOptions(xhrResponseData.data);\n      }\n    }\n\n    this.loading = false;\n  };\n\n  /**\n   * Process data received with xhr response\n   */\n  addZoneOptions(this: SfRegister, options: Array<Object>) {\n    while (this.zone.length) {\n      this.zone.removeChild(this.zone[0]);\n    }\n\n    options.forEach((option: SelectOption, index: number) => {\n      this.zone.options[index] = new Option(option.label, option.value);\n    });\n\n    this.zone.disabled = false;\n  };\n\n\n  /**\n   * Adds a preview information about file to upload in a label\n   */\n  uploadFile(this: HTMLInputElement) {\n    let information = document.getElementById('uploadFile');\n    if (information) {\n      (information as HTMLInputElement).value = this.value;\n    }\n  };\n\n  /**\n   * Handle remove image button clicked\n   */\n  removeFile() {\n    let remove = document.getElementById('removeImage');\n    if (remove) {\n      (remove as HTMLInputElement).value = '1';\n    }\n    this.submitForm();\n  };\n\n  /**\n   * Selects the form and triggers submit\n   */\n  submitForm() {\n    let form = document.getElementById('sfrForm');\n    if (form) {\n      (form as HTMLFormElement).reset();\n    }\n  };\n}\n","import SfRegister from './SfRegister';\n\nlet sfRegister = new SfRegister();\n/**\n * Global function needed for invisible recaptcha\n */\nwindow.sfRegister_submitForm = () => {\n  sfRegister.submitForm();\n};\n"]}